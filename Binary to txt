#include <iostream>
#include <fstream>
#include <bitset>
#include <sstream>

std::string binaryToText(const std::string& binaryData) {
    std::string result;
    std::istringstream stream(binaryData);
    std::string byte;

    while (stream >> byte) {
        if (byte.length() == 8) {
            char character = static_cast<char>(std::bitset<8>(byte).to_ulong());
            result += character;
        } else {
            std::cerr << "Invalid binary byte: " << byte << std::endl;
        }
    }
    return result;
}

int main() {
    std::string filename;
    std::cout << "Enter the filename: ";
    std::cin >> filename;
    
    std::ifstream inFile(filename);
    if (!inFile) {
        std::cerr << "Error: Could not open the file for reading." << std::endl;
        return 1;
    }
    
    std::ostringstream buffer;
    buffer << inFile.rdbuf();
    std::string binaryInput = buffer.str();
    inFile.close();

    std::string decodedText = binaryToText(binaryInput);

    std::ofstream outFile(filename, std::ios::trunc);
    if (outFile) {
        outFile << decodedText;
        outFile.close();
        std::cout << "Decoded text has been written to " << filename << "!" << std::endl;
    } else {
        std::cerr << "Error: Could not open the file for writing." << std::endl;
        return 1;
    }

    return 0;
}
